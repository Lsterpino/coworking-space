spring.application.name=coworking-space

#Configuracion de la base de datos
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Importar el archivo .env
spring.config.import=optional:file:.env[.properties]

########### POSTGRESQL  ############
# Driver y Dialecto de Hibernate de la base de datos
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Contexto de los endpoints
server.servlet.context-path=/api

# Configuraci√≥n de Springdoc OpenAPI
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
spring.web.resources.static-locations=classpath:/static/,classpath:/META-INF/resources/

# JWT Configuration
secret.key=${SECRET_KEY}
admin.default.password=${ADMIN_PASSWORD}
# jwt.expiration=3600000

# Cuenta Gmail
email.username=${EMAIL_USERNAME}
email.password=${EMAIL_PASSWORD}

# Base de datos en memoria
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.h2.console.enabled=true
# spring.jpa.hibernate.ddl-auto=create-drop

# Cuenta Gmail
email.username=${EMAIL_USERNAME}
email.password=${EMAIL_PASSWORD}